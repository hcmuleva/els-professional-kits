version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: auth_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppass}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      # If your starter kit ships an init script, mount it like below:
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-appuser} -d ${POSTGRES_DB:-appdb}"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build: .
    container_name: flask_auth_api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppass}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      JWT_SECRET: ${JWT_SECRET:-please_change_me}
      JWT_EXPIRE_MINUTES: 120
      # DATABASE_URL: "postgresql+psycopg2://appuser:apppass@postgres:5432/appdb"  # optional explicit
    ports:
      - "5002:5000"

volumes:
  pgdata:
