version: '3.8'

services:
  # postgres:
  #   image: postgres:17
  #   container_name: strapi-postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: ${DATABASE_NAME}
  #     POSTGRES_USER: ${DATABASE_USERNAME}
  #     POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  #   ports:
  #     - "5434:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - strapi-network

  # strapi:
  #   image: harishdell/lmsserver:1.8
  #   container_name: strapi-app
  #   restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     DATABASE_CLIENT: postgres
  #     DATABASE_HOST: postgres
  #     DATABASE_PORT: 5432
  #     DATABASE_NAME: ${DATABASE_NAME}
  #     DATABASE_USERNAME: ${DATABASE_USERNAME}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     JWT_SECRET: ${JWT_SECRET}
  #     ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
  #     APP_KEYS: ${APP_KEYS}
  #     NODE_ENV: development
  #   volumes:
  #     - ./public/uploads:/opt/app/public/uploads
  #   ports:
  #     - "1338:1337"
  #   depends_on:
  #     - postgres
  #   networks:
  #     - strapi-network

  zap:
    image: zaproxy/zap-stable
    container_name: strapi-zap-security
    user: zap
    ports:
      - "8090:8080"
      - "8091:8090"
    volumes:
      - ./security/reports:/zap/reports
      - ./security/scripts:/zap/scripts
      - ./security/configs:/zap/configs
      - ./security/context:/zap/context
      - ./security/wrk:/zap/wrk
    networks:
      - security-network
    command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true

networks:
  security-network:
    driver: bridge
volumes:
  postgres_data:
