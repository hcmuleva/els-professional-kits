{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgres.name }}
  labels:
    app: {{ .Values.postgres.name }}
spec:
  serviceName: {{ .Values.postgres.name }}-service
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
    spec:
      containers:
      - name: {{ .Values.postgres.name }}
        image: {{ .Values.postgres.image }}
        imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.postgres.containerPort }}
        env:
        - name: POSTGRES_USER
          value: "{{ .Values.postgres.username }}"
        - name: POSTGRES_PASSWORD
          value: "{{ .Values.postgres.password }}"
        - name: POSTGRES_DB
          value: "{{ .Values.postgres.database }}"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          tcpSocket:
            port: {{ .Values.postgres.containerPort }}
          initialDelaySeconds: {{ .Values.postgres.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.postgres.readinessProbe.periodSeconds }}
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgres.storageSize }}
{{- end }}
